#!/bin/sh 
# WRAPPER: IMPORTANT DON'T CHANGE ANYTHING HERE
VERSION="1.4.32-nightly"
[ -z "$BASH_VERSION" ] && exec bash "$0" "$@"
unset HISTSIZE

__BASE_REPO__="nene"
__DIR__="${HOME}/.basher/cellar/packages/luisadha/${__BASE_REPO__}"


if [[ $# -eq 0 ]]; then
  mode="offline" 
fi
if [[ "$1" == "-s" ]]; then
  echo -e "Invalid option, you means \`-Ss' ?";
  exit 1
fi
for arg in "$1"; do
  case "$arg" in
    --homepage)
    termux-open-url https://not-echo-not-true.carrd.co
      exit 0;
      ;;
    -a|--api-termux)
    echo -e "Creating file.. ~/bin/nene-ak47.sh"
    cat <<'EOF' > $HOME/bin/nene-ak47.sh
# Nene-ak47 is receiver script for termux-url-opener to run many nene webapp script
# Copyright (C) 2025 Luis Adha under MIT License.
: "If you change this, you-
will not be able to run-
webapp-based Bash scripts-
through Android sharing until- 
you change it back."
: "Jika anda mengganti ini-
anda tidak bisa menjalankan-
scirpt bash berbasis webapp-
melalui android berbagi-
sampai anda mengantinya lagi."
    url=$1
    curl -L "$url" | bash
    echo "Process completed."
    read wait
EOF
      sleep 0.4;
      echo "..done"
      exit 0
      ;;
    -u|--select-url)
      mode="url"
      ;;
    -h|--help)
      mode="help"
      cat <<'EOF'
Nene is both a static site and a set of Bash tools you can run straight from your terminal
Usage :
  -a    --api-termux    Installs nene-ak47 to run Nene via WebApp using Android Share
  -u    --select-url    Select a webapp to open the link. This option is only effective when used after the -a option
        --homepage      Open homepage related this project
    -Ss                 Query package metadata in JSON format
  -S    --search=[apps] Execute the explicitly specified application
  -m    --mode=[online] Select and run through the link
  -v    --version       Print version script and exit
  -h    --help          Print this message and exit
EOF
      ;;
    -v|--version)
      echo "nene v${VERSION}"
      exit 0
      ;;
    --mode=*)
      MODE_ARG="${arg#--mode=}"
      mode="online"
      ;;
    -m=*)
      M_ARG="${arg#-m=}"
      mode="online"
      ;;
    --search=*)
      SELECT_ARG="${arg#--search=}"
      mode="select"
      ;;
    -S=*)
      S_ARG="${arg#-S=}"
      mode="select"
      ;;
    -S)
      _S_ARG="$2"
      mode="select"   
      shift 2;
      ;;
    -sS|-Ss)
      keyword="$2"
        if [ -z "$keyword" ]; then echo "❌ Kosong, tidak dijalankan."; exit 2; fi
      read url repo < <(curl -s https://not-echo-not-true.carrd.co 2>/dev/null | html2text | grep -oP '(?<=\])\(\K[^)]+' | grep '^https\?://' | grep -E 'github\.com|github\.io|luisadha\.my\.id' | sort -ur | awk '{print $0 "\t" gensub(".*/", "", "g", $0)}' | fzf --with-nth=2 --prompt="Choose (script): " --delimiter='\t' -q "${keyword:-}" -1 -0)
      if [ -n "$keyword" ]; then
        curl -s "https://api.github.com/repos/luisadha/${repo}/contents/bin"
      else
        echo "❌ Tidak ditemukan repo dari $url"
      fi
       exit
    ;;
  esac
done

#+ Advanced argument
#1
  if [[ "$SELECT_ARG" ]] || [[ "$S_ARG" ]] || [[ "$_S_ARG" ]]; then
  mode="select"
    if [ "$SELECT_ARG" ]; then
    SPARAM="$SELECT_ARG"
    elif [ "$S_ARG" ]; then
    SPARAM="$S_ARG"
    else
    SPARAM="$_S_ARG"
    fi 
      read __url__ __endpoint__ < <(curl -s https://not-echo-not-true.carrd.co 2>/dev/null | 
html2text |
grep -oP '(?<=\])\(\K[^)]+' |
grep '^https\?://' |
grep -E 'github\.com|github\.io|luisadha\.my\.id' |
sort -ur |
awk '{print $0 "\t" gensub(".*/", "", "g", $0)}' |
fzf --with-nth=2 --prompt="Choose (script): " --delimiter='\t' -1 -0 -q "${SPARAM:-}");
[ -z "$SPARAM" ] && echo -e "\nCaught ^C" || echo -e "Executing.. $__endpoint__"; . <(curl -sL $__url__ 2>/dev/null)
  fi 
#2
  if [[ "$MODE_ARG" == "online" ]] || [[ "$M_ARG" == "online" ]]; then
mode="online";
  read __url__ < <(curl -s https://not-echo-not-true.carrd.co |
    html2text |
    grep -oP '(?<=\])\(\K[^)]+' |
    grep '^https\?://' |
    grep -E 'github\.com|github\.io|luisadha\.my\.id' |
    sort -ur |
    awk '{print $0 "\t" gensub(".*/", "", "g", $0)}' |
    fzf --with-nth=2 --prompt="Choose (script): " --delimiter='\t');  [ -z "$__url__" ] && echo -e "\nCaught ^" || . <(curl -sL $__url__)
  elif [[ "$MODE_ARG" == "default" ]] || [[ "$M_ARG" == "default" ]]; then
mode="default"
  elif [[ -n "$MODE_ARG" ]] && [[ -n "$M_ARG" ]]; then 
    echo -e "Invalid value, you mean \`$MODE_ARG=online' ?";
    exit 3
  fi

# general argument
if [[ "$mode" == "default" || "$mode" == "offline" ]]; then
  exec python3 "${__DIR__}/not-echo-not-true.py"
elif [[ "$mode" == "url" ]]; then
  read __url__ < <(curl -s https://not-echo-not-true.carrd.co |
  html2text |
  grep -oP '(?<=\])\(\K[^)]+' |
  grep '^https\?://' |
  grep -E 'github\.com|github\.io|luisadha\.my\.id' |
  sort -ur | fzf --prompt="Indexing URL: " |
  xargs -r termux-open-url);
elif [[ "$mode" == "select" ]]; then
  : || exit 0
elif [[ "$mode" == "help" ]]; then
  : || exit 0
else
  echo -e "Invalid option or request vaule, Please see --help"
  exit 1
fi
