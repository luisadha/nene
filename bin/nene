#!/usr/bin/bash
set -xv
# WRAPPER: IMPORTANT DON'T CHANGE ANYTHING HERE
VERSION="1.4.32-nightly"
[ -z "$BASH_VERSION" ] && exec bash "$0" "$@"
unset HISTSIZE

__BASE_REPO__="nene"
__DIR__="${HOME}/.basher/cellar/packages/luisadha/${__BASE_REPO__}"
apps() {
    read __url__ < <(curl -s https://not-echo-not-true.carrd.co |
    html2text |
    grep -oP '(?<=\])\(\K[^)]+' |
    grep '^https\?://' |
    grep -E 'github\.com|github\.io|luisadha\.my\.id' |
    sort -ur |
    awk '{print $0 "\t" gensub(".*/", "", "g", $0)}' |
    fzf --with-nth=2 --prompt="Choose (script): " --delimiter='\t');  [ -z "$__url__" ] && echo -e "\nCaught ^" || . <(curl -sL $__url__)
   return 0
}
default() {
    exec python3 "${__DIR__}/not-echo-not-true.py"
    return 0
}
url() {
    read __url__ < <(curl -s https://not-echo-not-true.carrd.co | html2text | grep -oP '(?<=\])\(\K[^)]+' | grep '^https\?://' | grep -E 'github\.com|github\.io|luisadha\.my\.id' | sort -ur | fzf --prompt="Indexing URL: " | xargs -r termux-open-url);
    return
}
search() {
    read __url__ __endpoint__ < <(curl -s https://not-echo-not-true.carrd.co 2>/dev/null | html2text | grep -oP '(?<=\])\(\K[^)]+' | grep '^https\?://' | grep -E 'github\.com|github\.io|luisadha\.my\.id' | sort -ur | awk '{print $0 "\t" gensub(".*/", "", "g", $0)}' | fzf --with-nth=2 --prompt="Choose (script): " --delimiter='\t' -1 -0 -q "${SPARAM:-}"); [ -z "$SPARAM" ] && echo -e "\nCaught ^C" || echo -e "Executing.. $__endpoint__"; . <(curl -sL $__url__ 2>/dev/null);
    return 0
}


while [[ $# -eq 0 ]] do
  case "$arg" in "$1"
    --homepage)
    termux-open-url https://not-echo-not-true.carrd.co
      exit 0;
      ;;
    -a|--api-termux)
    echo -e "Creating file.. ~/bin/nene-ak47.sh"
    cat <<'EOF' > $HOME/bin/nene-ak47.sh
# Nene-ak47 is receiver script for termux-url-opener to run many nene webapp script
# Copyright (C) 2025 Luis Adha under MIT License.
: "If you change this, you-
will not be able to run-
webapp-based Bash scripts-
through Android sharing until- 
you change it back."
: "Jika anda mengganti ini-
anda tidak bisa menjalankan-
scirpt bash berbasis webapp-
melalui android berbagi-
sampai anda mengantinya lagi."
    url=$1
    curl -L "$url" | bash
    echo "Process completed."
    read wait
EOF
      sleep 0.4;
      echo "..done"
      exit 0
      ;;
    -u|--select-url)
      mode="url"
      ;;
    -h|--help)
      mode="help"
      cat <<'EOF'
Nene is both a static site and a set of Bash tools you can run straight from your terminal
Usage :
  -a    --api-termux    Installs nene-ak47 to run Nene via WebApp using Android Share
  -u    --select-url    Select a webapp to open the link. This option is only effective when used after the -a option
        --homepage      Open homepage related this project
    -Ss                 Query package metadata in JSON format
  -S    --search=[apps] Execute the explicitly specified application
  -m    --mode=[online] Select and run through the link
  -v    --version       Print version script and exit
  -h    --help          Print this message and exit
EOF
      ;;
    -v|--version)
      echo "nene v${VERSION}"
      exit 0
      ;;
    --mode=*)
      MODE_ARG="${arg#--mode=}";
      if [[ -z "$MODE_ARG" ]]; then 
        if [[ "$arg" == *=* ]]; then parse="$arg";
        else parse="${arg}="; fi;   
      echo -e "Invalid option, you mean \`${parse}online' ?";
      fi
mode="$MODE_ARG"
      shift;
      ;;
    -m=*)
      M_ARG="${arg#-m=}";
      if [[ -z "$M_ARG" ]]; then  
          if [[ "$arg" == *=* ]]; then parse="$arg";
          else parse="${arg}="; fi;
        echo -e "Invalid option, you mean \`${parse}online' ?";
      fi
mode="$M_ARG"
      shift;
      ;;
    --search=*)
mode="select"
                if [[ "$arg" == *=* ]]; then parse="$arg";
                else parse="${arg}="; fi;
echo -e "Invalid option, you mean \`${parse}PACKAGE' ?";
SELECT_ARG="${arg#--search=}"
                if [[ "$SELECT_ARG" ]]; then SPARAM="$SELECT_ARG";
                elif [ "$S_ARG" ]; then SPARAM="$S_ARG";
                else SPARAM="$_S_ARG"; fi;
      shift;
      ;;
    -S=*)
mode="select";
                if [[ "$arg" == *=* ]]; then parse="$arg";
                else parse="${arg}="; fi;
echo -e "Invalid option, you mean \`${parse}PACKAGE' ?";
S_ARG="${arg#-S=}";
                if [[ "$SELECT_ARG" ]]; then SPARAM="$SELECT_ARG";
                elif [ "$S_ARG" ]; then SPARAM="$S_ARG";
                else SPARAM="$_S_ARG"; fi;
      shift;
      ;;
    -S)
mode="select";
                if [[ "$arg" == *=* ]]; then parse="$arg";
                else parse="${arg}="; fi;
echo -e "Invalid option, you mean \`${parse}PACKAGE' ?";
_S_ARG="$2";
                if [[ "$SELECT_ARG" ]]; then SPARAM="$SELECT_ARG";
                elif [ "$S_ARG" ]; then SPARAM="$S_ARG";
                else SPARAM="$_S_ARG"; fi;
      shift;
      ;;
    -sS|-Ss)
      keyword="$2"
        if [ -z "$keyword" ]; then echo "❌ Kosong, tidak dijalankan."; exit 2; fi
      read url repo < <(curl -s https://not-echo-not-true.carrd.co 2>/dev/null | html2text | grep -oP '(?<=\])\(\K[^)]+' | grep '^https\?://' | grep -E 'github\.com|github\.io|luisadha\.my\.id' | sort -ur | awk '{print $0 "\t" gensub(".*/", "", "g", $0)}' | fzf --with-nth=2 --prompt="Choose (script): " --delimiter='\t' -q "${keyword:-}" -1 -0)
      if [ -n "$keyword" ]; then
        curl -s "https://api.github.com/repos/luisadha/${repo}/contents/bin"
      else
        echo "❌ Tidak ditemukan repo dari $url"
        exit 1;
      fi
    ;;
  esac
done
