#!/usr/bin/bash
#set -xv
# WRAPPER: IMPORTANT DON'T CHANGE ANYTHING HERE
[ -z "$BASH_VERSION" ] && exec bash "$0" "$@"
# shellcheck disable=SC1090
PACKAGE="nene"
VERSION="1.5.61b"
NEPI="https://luisadha.my.id/" # formerly not-echo-not-true.carrd.co
V_FLAGS='--version' # GLOBAL FLAGS
E_MATCH='--exact' # FZF FLAGS
S_MATCH='--smart'
UNKNOWN="Error: Unknown options"
STARGS=1; 
NDARGS=2;
RDARGS=3;
THARGS=4;
NULLARGS=0;
PACKAGE="$(echo "PACKAGE")"
PKG_SHARE_NENE="${HOME}/.local/share/nene/"
__BASE_REPO__="nene"
BASHER_PKG="${HOME}/.basher/cellar/packages/luisadha/${__BASE_REPO__}"
DRY_RUN=0
MODE=0
DB_FILE="$HOME/.local/share/nene/update-lists"
PROMPT="Choose a script to run online"
default_apps() {
 if [[ -n "$BASHER_ROOT" && -d "$BASHER_PKG" ]]; then
    exec python3 "${BASHER_PKG}/not-echo-not-true.py"
    return 0
  else
    exec python3 "${PREFIX}/libexec/not-echo-not-true.py"
 fi
}
check_dependencies() {
  local missing=()
  local dependencies=("python3" "jq" "termux-open-url" "sort" "xargs" "html2text" "fzf" "awk" "grep" "gum" "wget" "curl") 

  for cmd in "${dependencies[@]}"; do
    if ! command -v "$cmd" &>/dev/null; then
      missing+=("$cmd")
    fi
  done

  if (( ${#missing[@]} > 0 )); then
    echo "‚ùå Missing dependencies: ${missing[*]}"
    echo "üëâ Please install them and try again."
    exit 1
  fi
}
online_apps() {
    read -r __url__ < <(curl -s "$NEPI" |
    html2text |
    grep -oP '(?<=\])\(\K[^)]+' |
    grep '^https\?://' |
    grep -E 'github\.com|github\.io|luisadha\.my\.id' |
    sort -ur |
    awk '{print $0 "\t" gensub(".*/", "", "g", $0)}' |
    fzf --with-nth=2 --prompt="Choose (script): " --delimiter='\t');
    [ -z "$__url__" ] &&  echo -e "\nCaught ^" || . <(curl -sL $__url__);
   
}
url() {
    read -r __url__ < <(curl -s "$NEPI" | html2text | grep -oP '(?<=\])\(\K[^)]+' | grep '^https\?://' | grep -E 'github\.com|github\.io|luisadha\.my\.id' | sort -ur | fzf --prompt="Indexing URL: " | xargs -r termux-open-url);
    return 0
}
homepage() {
    termux-open-url https://luisadha.my.id
    return 0
}
addon() {
echo -e "Creating file.. ~/bin/nene-ak47.sh"
cat <<'EOF' > "$HOME"/bin/nene-ak47.sh
# Nene-ak47 is receiver script for termux-url-opener to run many nene webapp script
# Copyright (C) 2025 Luis Adha under MIT License.
: "If you change this, you-
will not be able to run-
webapp-based Bash scripts-
through Android sharing until-
you change it back."
: "Jika anda mengganti ini-
anda tidak bisa menjalankan-
scirpt bash berbasis webapp-
melalui android berbagi-
sampai anda mengantinya lagi."
    url=$1
    curl -L "$url" | bash
    echo "Process completed."
    read wait
EOF
sleep 0.4;
echo "..done"
return 0
}
_help() {
cat <<'EOF'
Nene is both a static site and a set of Bash tools you can run straight from your terminal
Usage :
  -a    --api-termux     Installs nene-ak47 to run Nene via WebApp using Android Share
  -u    --select-url     Select a webapp to open the link. This option is only effective when used after the -a option
        --homepage       Open homepage related this project
  -m    --mode=online    Select and run through the link if not set default offline
  -v    --version        Print version script and exit
  -h    --help           Print this message and exit
EOF
}
version() {
echo "nene v${VERSION}"
return 0
}

if [[ $# -eq 0 ]]; then
default_apps;
fi

if [[ "$1" == "-m" || "$1" == "--m" ]]; then
  echo -e "Invalid option, you means \`-m=1' ?";
    exit 1
fi

available_options() {
cat <<EOF
-a
-u
-h
-m
-v
--select-url
--api-termux
--dry-run
--help
--mode
--homepage
--version
EOF
}

for arg in "$@"; do
  case "$arg" in
    flags)        available_options;;
    -a|--api-termux)    addon;;
    -u|--select-url)      url;;
    -h|--help)          _help;;
    -v|--version)        version;;
       --homepage)      homepage;;
       --dry-run | --dry-run=1) DRY_RUN=1;;
       --dry-run=*) echo "Value must be 1 in $arg" >&2; exit 2;;
    -m=1 | --mode-online=1)  MODE=1
read -r __url__ __endpoint__ < <(curl -s "${NEPI}"|html2text|grep -oP '(?<=\])\(\K[^)]+'|grep '^https\?://'|grep -E 'github\.com|github\.io'|sort -ur |awk '{print $0 "\t" gensub(".*/", "", "g", $0)}'|fzf --with-nth=2 --prompt="$PROMPT: " -0 --delimiter='\t'); [ -z "$__url__" ] &&  echo -e "\nNo internet connections or no input selected. ^" 
      ;;    
    -m=0 | --mode-online=0)  MODE=0;;
    *) echo "${UNKNOWN}" >&2; exit 1;
    ;;
  esac
  shift
done

# --- Eksekusi setelah semua flag diparsing ---

if [[ $MODE -eq 1 ]]; then
  if [[ $DRY_RUN -eq 1 ]]; then
    echo "[DRY-RUN] Not Really Execute ${__endpoint__}" 
    echo <(true) 2>/dev/null; # Do nothing
  else
    . <(curl -sL ${__url__}) 
  fi
fi
